(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{607:function(a,t,s){"use strict";s.r(t);var e=s(68),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[a._v("#")]),a._v(" 注释")]),a._v(" "),s("p",[a._v("JavaScript支持两种格式的注释（Comments）：单行注释（"),s("code",[a._v("//")]),a._v("）和多行注释（"),s("code",[a._v("/* ... */")]),a._v("）。")]),a._v(" "),s("h2",{attrs:{id:"_1-单行注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-单行注释"}},[a._v("#")]),a._v(" 1. 单行注释")]),a._v(" "),s("p",[a._v("一般使用  "),s("code",[a._v("//")]),a._v(" 来单行注释，在 "),s("code",[a._v("//")]),a._v(" 之后的同一行文本都会被JavaScript当作注释忽略掉。")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 这是单行注释")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 单行注释只会注释掉同一行的内容，不影响其他行的内容")]),a._v("\n")])])]),s("h2",{attrs:{id:"_2-多行注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-多行注释"}},[a._v("#")]),a._v(" 2. 多行注释")]),a._v(" "),s("p",[a._v("一般使用 "),s("code",[a._v("/* ... */")]),a._v(" 来多行注释，在 "),s("code",[a._v("/*")]),a._v(" 和 "),s("code",[a._v("*/")]),a._v(" 之间的文本也会被当作注释，这种注释可以跨行书写，但不能嵌套。")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/* 这里是一段注释 */")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*\n* 这里又是一段注释\n* 这里的注释可以连写多行\n*/")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*\n* 这里又是一段注释\n* /*这里的注释嵌套了，是不正确的写法*/")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("\n")])])]),s("h2",{attrs:{id:"_3-可嵌套使用-但不推荐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-可嵌套使用-但不推荐"}},[a._v("#")]),a._v(" 3. 可嵌套使用，但不推荐")]),a._v(" "),s("p",[a._v("在 JavaScript 中，可以同时使用这两种代码注释方式，甚至可以嵌套使用。")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/* 这里是一段注释 */")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 这里是另一段注释")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*\n 这里又是一段注释\n// 这里的注释虽然嵌套了，但也算正确，只是不推荐，因为没意义\n*/")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 这里又是一段注释 /*这里的注释虽然嵌套了，但也算正确，只是不推荐，因为没意义*/")]),a._v("\n")])])]),s("h2",{attrs:{id:"_4-最佳实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-最佳实践"}},[a._v("#")]),a._v(" 4. 最佳实践")]),a._v(" "),s("ol",[s("li",[s("code",[a._v("//")]),a._v(" 与注释的文本之间留一个空格，会更易于阅读")]),a._v(" "),s("li",[a._v("一般情况下注释不建议嵌套使用")]),a._v(" "),s("li",[a._v("TODO "),s("code",[a._v("/** ... */")]),a._v(" 和  "),s("code",[a._v("/* ... */")]),a._v(" 的区别")]),a._v(" "),s("li",[a._v("适当的预留空行")])])])}),[],!1,null,null,null);t.default=r.exports}}]);